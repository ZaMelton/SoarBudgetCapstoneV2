// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Data;

namespace Repository.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20200324191646_PropAddedToWallet")]
    partial class PropAddedToWallet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BudgeteerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.HasKey("BillId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Repository.Models.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BudgetStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BudgeteerId")
                        .HasColumnType("int");

                    b.Property<double>("CoffeeCategoryLimit")
                        .HasColumnType("float");

                    b.Property<double>("CoffeeCategorySpent")
                        .HasColumnType("float");

                    b.Property<double>("DiningOutCategoryLimit")
                        .HasColumnType("float");

                    b.Property<double>("DiningOutCategorySpent")
                        .HasColumnType("float");

                    b.Property<double>("EntertainmentCategoryLimit")
                        .HasColumnType("float");

                    b.Property<double>("EntertainmentCategorySpent")
                        .HasColumnType("float");

                    b.Property<double>("GasCategoryLimit")
                        .HasColumnType("float");

                    b.Property<double>("GasCategorySpent")
                        .HasColumnType("float");

                    b.Property<double>("GroceriesCategoryLimit")
                        .HasColumnType("float");

                    b.Property<double>("GroceriesCategorySpent")
                        .HasColumnType("float");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<double>("MonthlyBillMoney")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyBudgetItemMoney")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyDebtItemMoney")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyGoalItemMoney")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyIncome")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyLimit")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyMoneySaved")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyRandomExpenseMoney")
                        .HasColumnType("float");

                    b.Property<double>("MonthlyTotalMoney")
                        .HasColumnType("float");

                    b.Property<double>("RandomExpenseLimit")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("BudgetId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Repository.Models.BudgetItem", b =>
                {
                    b.Property<int>("BudgetItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BudgetItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BudgeteerId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BudgetItemId");

                    b.ToTable("BudgetItems");
                });

            modelBuilder.Entity("Repository.Models.BudgetItemExpense", b =>
                {
                    b.Property<int>("BudgetItemExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<string>("BudgetItemExpenseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BudgetItemExpenseId");

                    b.ToTable("BudgetItemExpenses");
                });

            modelBuilder.Entity("Repository.Models.Budgeteer", b =>
                {
                    b.Property<int>("BudgeteerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("BudgeteerId");

                    b.HasIndex("WalletId");

                    b.ToTable("Budgeteers");
                });

            modelBuilder.Entity("Repository.Models.DebtItem", b =>
                {
                    b.Property<int>("DebtItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountToPayPerMonth")
                        .HasColumnType("float");

                    b.Property<int?>("BudgeteerId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<double>("TotalDebtAmount")
                        .HasColumnType("float");

                    b.HasKey("DebtItemId");

                    b.ToTable("DebtItems");
                });

            modelBuilder.Entity("Repository.Models.GoalItem", b =>
                {
                    b.Property<int>("GoalItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BudgeteerId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GoalItemId");

                    b.ToTable("GoalItems");
                });

            modelBuilder.Entity("Repository.Models.RandomExpense", b =>
                {
                    b.Property<int>("RandomExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RandomExpenseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RandomExpenseId");

                    b.ToTable("RandomExpenses");
                });

            modelBuilder.Entity("Repository.Models.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ExtraCash")
                        .HasColumnType("float");

                    b.Property<double>("TotalBillMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalBudgetItemMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalDebtItemMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalGoalItemMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalMoneySaved")
                        .HasColumnType("float");

                    b.Property<double>("TotalRandomExpenseMoney")
                        .HasColumnType("float");

                    b.HasKey("WalletId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("Repository.Models.Budgeteer", b =>
                {
                    b.HasOne("Repository.Models.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId");
                });
#pragma warning restore 612, 618
        }
    }
}
